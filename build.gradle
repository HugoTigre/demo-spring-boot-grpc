plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'

    id 'org.jetbrains.kotlin.jvm' version '1.3.40'
    id "org.jetbrains.kotlin.kapt" version "1.3.40"
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.40'

    id "org.jetbrains.gradle.plugin.idea-ext" version "0.5"

    id 'com.google.protobuf' version '0.8.8' //https://github.com/google/protobuf-gradle-plugin
    id "java"
}

kapt {
    useBuildCache = true
}

ext {
    jUnit = '5.4.1'
    mockito = '2.23.4'
    grpc_version = '1.21.0'
    protobuf_version = '0.8.9'
    protobuf_protocol_version = '3.7.1'
}

group = 'com.pakybytes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Admin
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Web
    implementation('org.springframework.boot:spring-boot-starter-web')

    // UI
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // Json
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8')

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    kapt("org.springframework.boot:spring-boot-configuration-processor")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1")
    
    // gRPC
    implementation "io.grpc:grpc-core:$grpc_version"
    implementation "io.grpc:grpc-netty:$grpc_version"
    implementation "io.grpc:grpc-protobuf:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "io.grpc:grpc-testing:$grpc_version"

    implementation "com.google.protobuf:protobuf-gradle-plugin:$protobuf_version"

    implementation 'io.github.lognet:grpc-spring-boot-starter:3.3.0'

    // Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api:$jUnit")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$jUnit")

    testImplementation("org.mockito:mockito-core:$mockito")
    testImplementation("org.mockito:mockito-junit-jupiter:$mockito")
    testImplementation('com.nhaarman:mockito-kotlin:1.6.0')
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_protocol_version" // Download from repositories
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc {}
        }
    }
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/java/com/pakybytes/demo/springbootgrpc/api/protobuf/'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
            include '**/*.protodev'
        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/java/com/pakybytes/demo/springbootgrpc/api/protobuf/'
        }
    }
}


ext['junit-jupiter.version'] = jUnit // override spring dependency management

test {
    useJUnitPlatform() {
        excludeTags 'integration'
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        // outputs.upToDateWhen {false}
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    check.dependsOn it
    shouldRunAfter test
}